{
	"name": "emp2",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "emp2",
						"type": "DatasetReference"
					},
					"name": "emp2"
				},
				{
					"dataset": {
						"referenceName": "Department",
						"type": "DatasetReference"
					},
					"name": "Dep"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Department2",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "join1"
				},
				{
					"name": "aggregate1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          {Employee Id} as string,",
				"          {name } as string,",
				"          country as string,",
				"          depId as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> emp2",
				"source(output(",
				"          {Department Id} as string,",
				"          {Dep Name} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Dep",
				"emp2, Dep join(depId == {Department Id},",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1 aggregate(groupBy({Dep Name}),",
				"     {Total Emp} = count({Dep Name})) ~> aggregate1",
				"aggregate1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          {Department Id} as string,",
				"          {Dep Name} as string",
				"     ),",
				"     partitionFileNames:['Department.csv'],",
				"     truncate: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sink1"
			]
		}
	}
}